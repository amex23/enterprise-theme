{% comment %} {{ 'embeddableWidget.bundle.js' | asset_url | script_tag }}
{{ 'embeddableWidget.min.css' | asset_url | stylesheet_tag }}
{{ 'jquery.cookie.min.js' | asset_url | script_tag }} {% endcomment %}
<script src="https://cdn.tailwindcss.com"></script>

{%- comment -%}
// Tell us if the collection is in the graveyard
{%- endcomment -%}{% if collection.metafields.global.status == 'graveyard' %}
    {% assign isGraveyard = true %}
{% endif %}

<style>
    .hidden {
        display: none;
    }
    .extra-info,
    .extra-info p {
        font-size: 14px !important;
    }

    .connect-to-metamask__open-modal-button {
        width: 100%;
    }

    .remaining {
        font-size: 16px;
        color: #888;
        font-weight: 500;
        margin-left: 10px;
    }

    #verify-nft,
    #nft-required {
        display: none;
    }

    #verify-nft.show,
    #nft-required.show {
        display: block;
    }

    #daily .collection {
        margin-top: 20px;
    }

    .connect-to-metamask__open-modal-button {
        box-shadow: none;
        border: 1px solid #ccc;
        border-radius: 0;
    }
</style>



    {% include 'todays-deals-widget', type: 'today' %}
    <hr>
    {% unless isGraveyard %}
        {% comment %} {% include 'recommended-products' %}  {% endcomment %}


        <div class="row">
            {% if number_of_images > 1 %}
                <div id="available-as" style="padding-bottom:50px;">
                    <div class="half-banner green smaller">
                        {% if isGraveyard %}Was Available As:{% else %}Shop This Artwork{% endif %}
                    </div>
                    <br>
                    <div class="row">
                        {% comment %}<ul class="other-variants small-block-grid-2 large-block-grid-4">
                        </ul>{% endcomment %}
                        <div class="also-carousel owl-carousel owl-theme">
                            {% for product in collection.products %}
                                {% assign outer = forloop %}
                                {% assign innerLoop = 0 %}
                                {% for image in product.images %}
                                    {% if innerLoop == 0 %}
                                        <div
                                            class="also-available"
                                            index="{{ outer.index0 }}"
                                            type="{{ product.type }}"
                                            data-subtype="{{ product.metafields.global.subtype }}"><img
                                                class="owl-lazy"
                                                data-src="{{ product.selected_or_first_available_variant.image | default: product.featured_image | img_url: 'medium' }}"
                                                alt="{{product.title}} - {{product.type}} - RIPT Apparel">{{ product.metafields.global.subtype }} <br> ${{ product.price | divided_by: 100 }}</div>
                                    {% endif %}
                                    {% assign innerLoop = innerLoop | plus: 1 %}
                                {% endfor %}
                                {% assign number_of_images = forloop.length %}
                            {% endfor %}
                        </div>
                    </div>
                </div>
                {% comment %}<div class="divider stripe"></div>{% endcomment %}
            {% endif %}
        </div>
    {% endunless %}





<script>
    $('body').addClass('daily-collection-page');
    $(document).ready(function() {

// Get artists.
        $.get('{{ settings.api_url }} /shopify/artists/{{ artist_name }}', {}, function(data) {
            if (data.artist.avatar == '') {
                data.artist.avatar = "{{ 'default-avatar.jpg' | asset_url }}";
            } else {
                data.artist.avatar = "{{ settings.image_base_url }}" + data.artist.avatar;
            }
            if (data.artist.bio == '') {
                data.artist.bio = "There's no information about this artist.";
            }
            vm.artistAvatar(data.artist.avatar);
            vm.artistBio(data.artist.bio);
        }, 'json');

        $('.graveyard-loves').click(function() {
            $this = $(this);{% if customer %}$.post('{{ settings.api_url }} /shopify/newlove/{{ collection.handle }}', {
                    username: $.cookie('ript-username')
                }, function(data) {

// update love count
                    if (data) {
                        $this.children('span').html(data);
                        if ($this.hasClass('loved')) {
                            $this.removeClass('loved');
                        } else {
                            $this.addClass('loved');
                        }
                    }
                });
            {% else %}

// redirect to login
                window.location.assign('/account/login?checkout_url=' + window.location.href);{% endif %}
        });

        Ript.choicesFromUrl();
    });

    $(document).ready(function($) {
        $('ul.tabs li').click(function() {
            var tab_id = $(this).attr('data-tab');

            $('ul.tabs li').removeClass('current');
            $('.tab-content').removeClass('current');

            $(this).addClass('current');
            $("#" + tab_id).addClass('current');
        })

        $('.also-carousel .also-available').click(function() {
            $("html, body").animate({
                scrollTop: 0
            }, 200);
            return false;
        });

        $('.add-to-cart').click(function() {

// _shopmsg("confirmOptin", "addToCartCheckbox");
        });
    });



// Track collection page view for Klaviyo
// var _learnq = _learnq || [];
// _learnq.push(['track', 'Viewed Collection']);

    var _learnq = _learnq || [];
    var item = {
        Name: {{ collection.title|json }},
        CollectionID: {{ collection.id|json }},

// Categories: {{ product.collections|map:'title'|json }},
        ImageURL: "https:            {{ collection.image.src | img_url: 'original' }}",
        URL: "{{ shop.secure_url }}{{ collection.url }}",{%- if collection.metafields.global.status == 'graveyard' -%}Graveyard : true
        {%- endif -%}
        {%- if collection.metafields.global.status == 'today' or collection.metafields.global.status == 'yesterday' -%}
            Daily : true
        {%- endif -%}
    };

    _learnq.push(['track', 'Viewed Collection', item]);

    _learnq.push([
        'trackViewedItem', {
            Title: item.Name,
            ItemId: item.CollectionID,
            ImageUrl: item.ImageURL,
            Url: item.URL
        }
    ]);
</script>

<script>

    var address = '/';
    var nftAddress = '';
    var nftToken = '';{% for product in daily-collection.products %}{% for tag in product.tags %}{% if tag contains "NFT_ADDRESS" %}address = '{{ tag | replace: "NFT_ADDRESS:", "" }}';
                {% break %}
            {% endif %}
        {% endfor %}
    {% endfor %}

    var split = address.split("/");
    nftAddress = split[0];

    var params = {

        // apiUrl: ApiUrl,
        parentElement: "#verify-nft",
        networkId: 137,
        metamaskDeepLink: null, // replace host for metamask mobile dapp apps, example: https://metamask.app.link/dapp/wallet.niftybridge.io/widget.html, see part after /dapp/
        nftAddress: nftAddress,
        tokenId: parseInt(split[1]),
        onConfirmCallback: (
            {onCloseModal, address, user}
        ) => {
            $.cookie('nft-' + '{{ nftproduct }}', true, {
                expires: 30 / 1440,
                path: '/'
            });
            vm.validNFT(true);

            onCloseModal()
        },
        onErrorCallback: () => {
            console.log("error")
        },
        onUnconfirmCallback: () => {
            console.log("not confirmed")
        }
    }

    mountWidget();

    function unmountWidget() {
        EmbeddableWidget.unmount()
    }

    function mountWidget() {
        EmbeddableWidget.mount(params);
    }
</script>